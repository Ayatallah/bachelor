import numpy as np
import pandas as pd
n1 = 'a'
n2 = 'b'
n3 = 'c'
n4 = 'd'
n5 = 'e'
n6 = 'f'
n7 = 'g'
n8 = 'h'
statusCol = 1
userTimeCol = 2


problems = "Problems"
status = "Status"
userTime = "UserTime"
failure = "Failure"
preprocessingTime = "PreprocessingTime"
heuristic = "Heuristic"
type = "Type"
equational = "Equational"

def getData(name):
    #array = np.genfromtxt(name, delimiter=",", skip_header=62, skip_footer=13764, usecols=(0,1,2,3,4,59,60,61), dtype=None)
    #array = np.genfromtxt(name, delimiter=",", skip_header=62, skip_footer=13764, usecols=(0,1,2,3,4,59,60,61), usemask=True,dtype=None,missing_values="-",filling_values=0)
    #array = np.genfromtxt(name, delimiter=",", skip_header=62, skip_footer=13764, usecols=(0,1,2,3,4,59,60,61), usemask=True,dtype=None,missing_values="-",filling_values=0)
    #array = np.genfromtxt(name, delimiter=" ", skip_header=61, usecols=(0, 1, 2, 3, 4, 59, 60, 61),
    #        names=[problems, status,userTime,failure,preprocessingTime,heuristic,type,equational],
    #        dtype=[('mystring', 'S25'), ('mystring1', 'S25'),('myfloat', 'f8'),('mystring2', 'S25'),('mystring3', 'S25'),('mystring4', 'S25'),
    #               ('mystring5', 'S25'),('mystring6', 'S5')], missing_values=("-","-","-","-","-","-","-","-"),
    #                      filling_values=("0","0",0.0,"0","0","0","0","0"))
    df= pd.read_csv(name, header=None,delim_whitespace=True,usecols=[0,1,2,3,4,59,60,61],skiprows=64,
                    names=[problems, status,userTime,failure,preprocessingTime,heuristic,type,equational])
    df[userTime] = df[userTime].convert_objects(convert_numeric=True)
    df[userTime] = df[userTime].astype('float32')
    df[userTime].fillna(9999.9, inplace=True)
    print len(df)
    return df


#thedata = getData("protokoll_G----_0001_FIFO.csv")
#f = open("mydata.csv", "w")

#np.savetxt(
#    f,           # file name
#    thedata,             # formatting, 2 digits in this case
#    delimiter=',',          # column delimiter
#    newline='\n',           # new line character
#    footer='end of file',   # file footer
#    comments='# ',          # character to use for comments
#    header='Data generated by numpy',
#    fmt="%s %s %.5f %s %s %s %s %s")


thedata = getData("heuristics/protokoll_G----_0036_10cw113fifo.csv")
f = open("mydatatrial.csv", "w")
print ((float(thedata[userTime][0]))+ 0.5)
np.savetxt(
    f,           # file name
    thedata,             # formatting, 2 digits in this case
    delimiter=',',          # column delimiter
    newline='\n',           # new line character
    footer='end of file',   # file footer
    comments='# ',          # character to use for comments
    header='Data generated by numpy',
    fmt="%s %s %f %s %s %s %s %s")

#thedata = getData("heuristics/protokoll_G----_0036_10cw113fifo.csv")
#f = open("mydata.csv", "w")

#np.savetxt(
#    f,           # file name
#    thedata[preprocessingTime],             # formatting, 2 digits in this case
#    delimiter=',',          # column delimiter
#    newline='\n',           # new line character
#    footer='end of file',   # file footer
#    comments='# ',          # character to use for comments
#    header='Data generated by numpy',
#    fmt="%s")

#def getNumericalStatus(status,time):
#    result = np.zeros(len(status), dtype=np.float_)
#    for i in [i for i,x in enumerate(status) if x == "T"]:
#        result[i] = (time[i])*10000000
#    return result


#def getNumericalStatus(status, time):
#    result1 = [0.0]*(len(status))
#    result = np.empty_like(result1)
#    for i in [i for i,x in enumerate(status) if x == "T"]:
 #       result[i] = 1000000000.0 * float(time[i])
 #   return result

#a = getData("protokoll_G----_0001_FIFO.csv")
#print a
#print getNumericalStatus(a["Status"],a["UserTime"])
